How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It was easier

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Save time when trying to find a bug or add a feature

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros
You save the changes you think are important
You do not get a very large file of changes that do not make sense as a programmer
    Cons
You might wait too long to commit an end up with an unreadable diff views
You might also commit a lot and have a very large log file

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git is specifically designed for developers and such programming projects usually have
multiple files assoiated and usually and dev ide's opens multiple fils at the same tie for editing, however
Google docs is designed to work in a special way which prohibits editing in a dev ide. 

How can you use the commands git log and git diff to view the history of files?

    to view history of commits the command git log is used
    git diff is used to view changes between two different commits

How might using version control make you more confident to make changes that
could break something?

    It makes it possible to revert to the previous copy of the code 
if something should break, and I will know exactly when it got broken by checking out previous logs.

Now that you have your workspace set up, what do you want to try using Git for?

    Using it in my future programming projects as the source version control of choice
